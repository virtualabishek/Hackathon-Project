<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="manifest" href="site.webmanifest">
    <link rel="shortcut icon" type="image/x-icon" href="assets/img/favicon.ico">
    <title>OTP Verification</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/otp-verify.css">
</head>
<body>
  <section class="wrapper">
    <div class="container">
        <div class="col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-6 offset-xl-3 text-center">
            <div class="logo">
                <img src="/assets/img/login_sign/logo.png" class="img-fluid"  alt="Logo">
            </div>
            <form action="/rojgar/api/v1/verify-otp" method="POST" class = "rounded bg-white shadow p-5" id="otpForm">
                <h3 class="text-dark fw-bolder fs-4 mb-2">Two Step Verification</h3>
                <div class="fw-normal text-muted mb-4">
                    Enter verification code sent to
                </div>
                <div class="d-flex align-items-center justify-content-center fw-bold mb-4">
                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-asterisk" viewBox="0 0 16 16">
                        <path d="M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1"/>
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-asterisk" viewBox="0 0 16 16">
                        <path d="M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1"/>
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-asterisk" viewBox="0 0 16 16">
                        <path d="M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1"/>
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-asterisk" viewBox="0 0 16 16">
                        <path d="M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1"/>
                    </svg>
                    <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-asterisk" viewBox="0 0 16 16">
                        <path d="M8 0a1 1 0 0 1 1 1v5.268l4.562-2.634a1 1 0 1 1 1 1.732L10 8l4.562 2.634a1 1 0 1 1-1 1.732L9 9.732V15a1 1 0 1 1-2 0V9.732l-4.562 2.634a1 1 0 1 1-1-1.732L6 8 1.438 5.366a1 1 0 0 1 1-1.732L7 6.268V1a1 1 0 0 1 1-1"/>
                    </svg>
                    <span>@gmail.com</span>
                </div>
                <div class="otp_input text-start mb-2">
                    <label for="digit">Type your 6 digit security code.</label>
                    <div class="d-flex align-items-center justify-content-between mt-2">
                        <input type="text" class="form-control otp-input" id="otp1" name="otp1" placeholder="" maxlength="1" autofocus required>
                        <input type="text" class="form-control otp-input" id="otp2" name="otp2" placeholder="" maxlength="1" required>
                        <input type="text" class="form-control otp-input" id="otp3" name="otp3" placeholder="" maxlength="1" required>
                        <input type="text" class="form-control otp-input" id="otp4" name="otp4" placeholder="" maxlength="1" required>
                        <input type="text" class="form-control otp-input" id="otp5" name="otp5" placeholder="" maxlength="1" required>
                        <input type="text" class="form-control otp-input" id="otp6" name="otp6" placeholder="" maxlength="1" required>
                        <input type="hidden" name="email" value="<%= email%>">
<!--                        <% if (typeof email !== 'undefined') { %>-->
<!--                            &lt;!&ndash; Render email-specific content if email parameter is present &ndash;&gt;-->
<!--                            <p>Email Address: <%= email %></p>-->
<!--                        <% } else { %>-->
<!--                            &lt;!&ndash; Handle case where email parameter is not present &ndash;&gt;-->
<!--                            <p>Email Address not provided</p>-->
<!--                        <% } %>-->
                    </div>
                </div>
                <button type="submit" class="btn btn-primary submit_btn my-4">Submit</button>
                <div class="fw-normal text-muted mb-2">
                    Didn't get the code, wait for 4 minutes?
                    <!-- Display "Resend OTP" link only after 4 minutes -->
                    <a href="#" id="resendLink" class="text-primary fw-bold text-decoration-none" style="display: none;">Resend</a>
                    <span id="timer">4:00</span> <!-- Initial timer display -->
                </div>
            </form>


        </div>
    </div>
</section>
<script>
    // Timer for 4 minutes
    const timer = 4 * 60; // 4 minutes in seconds

    // Function to update timer display
    function updateTimerDisplay(seconds) {
        const minutes = Math.floor(seconds / 60);
        const remainingSeconds = seconds % 60;
        document.getElementById('timer').innerText = `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;
    }

    // Function to handle timer countdown
    function startTimer() {
        let remainingSeconds = timer;
        updateTimerDisplay(remainingSeconds); // Set initial timer display
        const timerInterval = setInterval(() => {
            if (remainingSeconds <= 0) {
                clearInterval(timerInterval);
                document.getElementById('resendLink').style.display = 'inline'; // Show "Resend OTP" link
            } else {
                updateTimerDisplay(remainingSeconds);
                remainingSeconds--;
            }
        }, 1000);
    }

    // Start timer when page loads
    window.onload = startTimer();
</script>

<script>
    // JavaScript for dynamic OTP input field focus
    const otpInputs = document.querySelectorAll('.otp-input');

    otpInputs.forEach((input, index) => {
        input.addEventListener('input', (event) => {
            if (event.inputType === 'deleteContentBackward') {
                // Move to previous input field if Backspace/Delete is pressed
                if (index > 0) {
                    otpInputs[index - 1].focus();
                }
            } else {
                // Move to next input field after entering a digit
                if (index < otpInputs.length - 1 && event.target.value.length === 1) {
                    otpInputs[index + 1].focus();
                }
            }
        });

        // Prevent user from pasting into input fields
        input.addEventListener('paste', (event) => {
            event.preventDefault();
        });
    });
</script>
</body>
</html>
